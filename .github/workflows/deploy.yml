name: Create and Configure GitHub Repo

env:
  ORGANIZATION_NAME: 'chvi-devops'
  TEAM_NAME: 'TeamA'
  
on:
  workflow_dispatch:
    inputs:
      repoName:
        description: 'Repository Name'
        required: true
      description:
        description: 'Repository Description'
        required: true
jobs:
  CreateRepo:
    name: "Deploy New Repositories"
    runs-on: ubuntu-latest
    steps:
    - name: Check if Repository Already Exists and Stop Workflow If Repository Exist
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        REPO_NAME="${{ github.event.inputs.repoName }}"
        ORG_NAME="${{ env.ORGANIZATION_NAME }}"

        echo "REPOSITORY_NAME=$REPO_NAME" >> "$GITHUB_ENV"

        if gh api repos/$ORG_NAME/$REPO_NAME --silent 2>/dev/null; then
          echo "Repository $ORG_NAME/$REPO_NAME exists."
          exit 1
        else
          echo "Repository $ORG_NAME/$REPO_NAME does not exist."
        fi
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create Repository
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        DESCRIPTION="${{ github.event.inputs.description }}"
        REPO_NAME="${{ env.REPOSITORY_NAME }}"
        ORG_NAME="${{ env.ORGANIZATION_NAME }}"
        TEAM_NAME="${{ env.TEAM_NAME }}"

        gh repo create $ORG_NAME/$REPO_NAME --public --description "$DESCRIPTION" \
          --include-all-branches --template=$ORG_NAME/template-repo 

    - name: Add TeamA as a Reviewer Team
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        REPO_NAME="${{ env.REPOSITORY_NAME }}"
        ORG_NAME="${{ env.ORGANIZATION_NAME }}"
        TEAM_SLUG_NAME=$(echo "${{ env.TEAM_NAME }}" | tr '[:upper:]' '[:lower:]')

        gh api --method PUT \
          /orgs/$ORG_NAME/teams/$TEAM_SLUG_NAME/repos/$ORG_NAME/$REPO_NAME -f permission='triage' 
        
        sleep 5
    
    - name: Configure Branch Protection
      run: |
        REPO_NAME="${{ env.REPOSITORY_NAME }}"
        ORG_NAME="${{ env.ORGANIZATION_NAME }}"
        GH_PAT="${{ secrets.GH_PAT }}"
        
        # Enable branch protection for Main branch
        curl -X PUT -H "Authorization: token $GH_PAT" \
          "https://api.github.com/repos/$ORG_NAME/$REPO_NAME/branches/main/protection" -d '{
            "required_status_checks": null,
            "enforce_admins": null,
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": false,
              "require_code_owner_reviews": false,
              "required_approving_review_count": 1
            },
            "restrictions": null,
            "required_linear_history": false,
            "allow_force_pushes": false,
            "allow_deletions": false
          }'
        
        # Enable branch protection for Development branch
        curl -X PUT -H "Authorization: token $GH_PAT" \
          "https://api.github.com/repos/$ORG_NAME/$REPO_NAME/branches/development/protection" -d '{
            "required_status_checks": null,
            "enforce_admins": null,
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": false,
              "require_code_owner_reviews": false,
              "required_approving_review_count": 1
            },
            "restrictions": null,
            "required_linear_history": false,
            "allow_force_pushes": false,
            "allow_deletions": false
          }'
      shell: bash
